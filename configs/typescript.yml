parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint'
extends:
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:@typescript-eslint/strict
overrides:
  - files:
      - '*.js'
      - '*.jsx'
    rules:
      '@typescript-eslint/explicit-function-return-type': off
rules:
  # -------- Supported Rules --------

  # Disallow @ts-<directive> comments or require descriptions after directives
  '@typescript-eslint/ban-ts-comment': off

  # Bans "// @ts-ignore" comments from being used
  '@typescript-eslint/ban-ts-ignore': off

  # Enforce consistent usage of type exports
  '@typescript-eslint/consistent-type-exports':
    - error

  # Enforce consistent usage of type imports
  '@typescript-eslint/consistent-type-imports':
    - error
    - prefer: type-imports
      fixStyle: inline-type-imports
      disallowTypeAnnotations: true

  # Require explicit return types on functions and class methods
  '@typescript-eslint/explicit-function-return-type':
    - error

  # Require explicit accessibility modifiers on class properties and methods
  '@typescript-eslint/explicit-member-accessibility':
    - error

  # Require a specific member delimiter style for interfaces and type literals
  '@typescript-eslint/member-delimiter-style':
    - error

  # Require a consistent member declaration order
  '@typescript-eslint/member-ordering':
    - error

  # Disallow duplicate constituents of union or intersection types
  '@typescript-eslint/no-duplicate-type-constituents':
    - error

  # Disallow extra non-null assertion
  '@typescript-eslint/no-extra-non-null-assertion':
    - error

  # Disallow unnecessary semicolons
  no-extra-semi: off
  '@typescript-eslint/no-extra-semi':
    - error

  # Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean
  '@typescript-eslint/no-inferrable-types': off

  # Disallows non-null assertions using the ! postfix operator
  '@typescript-eslint/no-non-null-assertion': off

  # Disallow the use of parameter properties in class constructors
  '@typescript-eslint/no-parameter-properties':
    - error

  # Disallow members of unions and intersections that do nothing or override type information
  '@typescript-eslint/no-redundant-type-constituents':
    - error

  # Disallow unnecessary namespace qualifiers
  '@typescript-eslint/no-unnecessary-qualifier':
    - error

  # Disallow empty exports that don't change anything in a module file
  '@typescript-eslint/no-useless-empty-export':
    - error

  # Require private members to be marked as readonly if they're never modified outside of the constructor
  '@typescript-eslint/prefer-readonly':
    - error

  # Require function parameters to be typed as readonly to prevent accidental mutation of inputs
  '@typescript-eslint/prefer-readonly-parameter-types':
    - error

  # Require switch-case statements to be exhaustive with union type
  '@typescript-eslint/switch-exhaustiveness-check':
    - error

  # Require consistent spacing around type annotations
  '@typescript-eslint/type-annotation-spacing':
    - error

  # -------- Extension Rules --------

  # Disallow or enforce spaces inside of blocks after opening block and before closing block
  block-spacing: off
  '@typescript-eslint/block-spacing':
      - error
      - never

  # Enforce consistent brace style for blocks
  brace-style: off
  '@typescript-eslint/brace-style':
    - error
    - 1tbs
    - allowSingleLine: true

  # Require or disallow trailing commas
  comma-dangle: off
  '@typescript-eslint/comma-dangle':
    - error
    - always-multiline

  # Enforce consistent spacing before and after commas
  comma-spacing: off
  '@typescript-eslint/comma-spacing':
    - error

  # Require or disallow spacing between function identifiers and their invocations
  func-call-spacing: off
  '@typescript-eslint/func-call-spacing':
    - error

  # Enforce consistent indentation
  indent: off
  '@typescript-eslint/indent':
    - error
    - 4
    - SwitchCase: 1

  # Enforce consistent spacing between property names and type annotations in types and interfaces
  key-spacing: off
  '@typescript-eslint/key-spacing':
    - error

  # Enforce consistent spacing before and after keywords
  keyword-spacing: off
  '@typescript-eslint/keyword-spacing':
    - error

  # Require or disallow an empty line between class members
  lines-between-class-members: off
  '@typescript-eslint/lines-between-class-members':
    - error
    - always
    - exceptAfterSingleLine: true

  # Disallow duplicate imports
  no-duplicate-imports: off
  '@typescript-eslint/no-duplicate-imports':
    - error

  # Disallow empty functions
  no-empty-function: off
  '@typescript-eslint/no-empty-function':
    - error
    - allow:
      - setters

  # Disallow variable declarations from shadowing variables declared in the outer scope
  no-shadow: off
  '@typescript-eslint/no-shadow':
    - warn
    - builtinGlobals: true

  # Disallow the use of variables before they are defined
  no-use-before-define: off
  '@typescript-eslint/no-use-before-define':
    - error

  # Enforce consistent spacing inside braces
  object-curly-spacing: off
  '@typescript-eslint/object-curly-spacing':
    - error

  # Enforce the consistent use of either backticks, double, or single quotes
  quotes: off
  '@typescript-eslint/quotes':
    - error
    - single

  # Enforce consistent returning of awaited values
  no-return-await: off
  '@typescript-eslint/return-await':
    - error
    - never

  # Require or disallow semicolons instead of ASI
  semi: off
  '@typescript-eslint/semi':
    - error

  # Enforce consistent spacing before blocks
  space-before-blocks: off
  '@typescript-eslint/space-before-blocks':
    - error

  # Require or disallow a space before function parenthesis
  space-before-function-paren: off
  '@typescript-eslint/space-before-function-paren':
    - error
    - anonymous: always
      named: never
      asyncArrow: always
