extends: 'eslint:recommended'
rules:
  # -------- Possible Errors --------

  # enforce return statements in callbacks of array methods
  array-callback-return:
    - error

  # disallow await inside of loops
  no-await-in-loop:
    - warn

  # disallow expressions where the operation doesn't affect the value
  no-constant-binary-expression:
    - warn

  # disallow constant expressions in conditions
  no-constant-condition:
    - warn
    - checkLoops: false

  # disallow control characters in regular expressions
  no-control-regex: off

  # disallow the use of debugger
  no-debugger: off

  # disallow duplicate module imports
  no-duplicate-imports:
    - error

  # disallow new operators with global non-constructor functions
  no-new-native-nonconstructor:
    - error

  # disallow comparisons where both sides are exactly the same
  no-self-compare:
    - warn

  # disallow returning values from setters
  no-setter-return:
    - error

  # disallow template literal placeholder syntax in regular strings
  no-template-curly-in-string:
    - warn

  # disallow unmodified loop conditions
  no-unmodified-loop-condition:
    - warn

  # disallow loops with a body that allows only one iteration
  no-unreachable-loop:
    - error

  # disallow unused private class members
  no-unused-private-class-members:
    - error

  # disallow the use of variables before they are defined
  no-use-before-define:
    - error

  # disallow assignments that can lead to race conditions due to usage of await or yield
  require-atomic-updates:
    - warn

  # -------- Suggestions --------

  # enforces getter/setter pairs in objects
  accessor-pairs:
    - error

  # require braces around arrow function bodies
  arrow-body-style:
    - error
    - as-needed

  # enforce the use of variables within the scope they are defined
  block-scoped-var:
    - error

  # require camelcase
  camelcase:
    - error

  # enforce that class methods utilize this
  class-methods-use-this:
    - error

  # enforce default clauses in switch statements to be last
  default-case-last:
    - error

  # require dot notation
  dot-notation:
    - error

  # require === and !==
  eqeqeq:
    - error

  # require grouped accessor pairs in object literals and classes
  grouped-accessor-pairs:
    - error

  # require or disallow logical assignment operator shorthand
  logical-assignment-operators:
    - error

  # disallow Array constructors
  no-array-constructor:
    - error

  # disallow return before else
  no-else-return:
    - error

  # disallow null comparisons without type-checking operators
  no-eq-null:
    - error

  # disallow empty block statements
  no-empty:
    - error
    - allowEmptyCatch: true

  # disallow unnecessary function binding
  no-extra-bind:
    - error

  # disallow unnecessary labels
  no-extra-label:
    - error

  # disallow case statement fallthrough
  no-fallthrough: off

  # disallow assignments to native objects or read-only global variables
  no-global-assign: off

  # disallow implied eval()
  no-implied-eval:
    - error

  # disallow labels that share a name with a variable
  no-label-var:
    - error

  # disallow unnecessary nested blocks
  no-lone-blocks:
    - error

  # disallow if statements as the only statement in else blocks
  no-lonely-if:
    - error

  # disallow new operators outside of assignments or comparisons
  no-new:
    - error

  # disallow object constructors
  no-new-object:
    - error

  # disallow primitive wrapper instances
  no-new-wrappers:
    - error

  # disallow octal escape sequences in string literals
  no-octal-escape:
    - error

  # disallow reassigning function parameters
  no-param-reassign: off

  # disallow unnecessary return await
  no-return-await:
    - error

  # disallow variable declarations from shadowing variables declared in the outer scope
  no-shadow:
    - warn
    - builtinGlobals: true

  # disallow initializing to undefined
  no-undef-init:
    - error

  # disallow throwing literals as exceptions
  no-throw-literal:
    - error

  # disallow ternary operators when simpler alternatives exist
  no-unneeded-ternary:
    - error

  # disallow unnecessary .call() and .apply()
  no-useless-call:
    - error

  # disallow unnecessary computed property keys in objects and classes
  no-useless-computed-key:
    - error

  # disallow unnecessary concatenation of strings
  no-useless-concat:
    - error

  # disallow unnecessary constructors
  no-useless-constructor:
    - error

  # disallow redundant return statements
  no-useless-return:
    - error

  # require let or const instead of var
  no-var:
    - error

  # disallow with statements
  no-with: off

  # require or disallow method and property shorthand syntax for object literals
  object-shorthand:
    - error

  # require or disallow assignment operator shorthand where possible
  operator-assignment:
    - error

  # require const declarations for variables that are never reassigned after declared
  prefer-const:
    - error

  # require destructuring from arrays and/or objects
  prefer-destructuring:
    - error
    - array: false
      object: true

  # suggest using the rest parameters instead of arguments
  prefer-rest-params:
    - error

  # suggest using spread syntax instead of .apply()
  prefer-spread:
    - error

  # require template literals instead of string concatenation
  prefer-template:
    - error

  # require using Error objects as Promise rejection reasons
  prefer-promise-reject-errors:
    - error
    - allowEmptyReject: true

  # require quotes around object literal property names
  quote-props:
    - error
    - as-needed

  # require radix parameter
  radix:
    - error
    - as-needed

  # disallow async functions which have no await expression
  require-await:
    - error

  # enforce consistent spacing after the // or /* in a comment
  spaced-comment:
    - error

  # require symbol descriptions
  symbol-description:
    - error

  # -------- Layout & Formatting --------

  # disallow or enforce spaces inside of brackets
  array-bracket-spacing:
    - error
    - never

  # require parens in arrow function arguments
  arrow-parens:
    - error
    - as-needed

  # require space before/after arrow functionâ€™s arrow
  arrow-spacing:
    - error

  # disallow or enforce spaces inside of blocks after opening block and before closing block
  block-spacing:
    - error
    - never

  # require brace style
  brace-style:
    - error
    - 1tbs
    - allowSingleLine: true

  # require or disallow trailing commas
  comma-dangle:
    - error
    - always-multiline

  # enforces spacing around commas
  comma-spacing:
    - error

  # comma style
  comma-style:
    - error

  # disallow or enforce spaces inside of computed properties
  computed-property-spacing:
    - error

  # enforce newline before and after dot
  dot-location:
    - error
    - property

  # require or disallow newline at the end of files
  eol-last:
    - error

  # require or disallow spacing between function identifiers and their invocations
  func-call-spacing:
    - error

  # enforce spacing around the * in generator functions
  generator-star-spacing:
    - error
    - before

  # enforce the location of arrow function bodies with implicit returns
  implicit-arrow-linebreak:
    - error

  # enforce consistent indentation
  indent:
    - error
    - 4
    - SwitchCase: 1

  # enforce the consistent use of either double or single quotes in JSX attributes
  jsx-quotes:
    - error
    - prefer-single

  # enforce consistent spacing between keys and values in object literal properties
  key-spacing:
    - error

  # enforce consistent spacing before and after keywords
  keyword-spacing:
    - error

  # enforce consistent linebreak style
  linebreak-style:
    - error

  # require or disallow an empty line between class members
  lines-between-class-members:
    - error
    - always
    - exceptAfterSingleLine: true

  # require parentheses when invoking a constructor with no arguments
  new-parens:
    - error

  # disallow multiple spaces
  no-multi-spaces:
    - error

  # disallow multiple empty lines
  no-multiple-empty-lines:
    - error
    - max: 1

  # disallow trailing whitespace at the end of lines
  no-trailing-spaces:
    - error

  # disallow renaming import, export, and destructured assignments to the same name
  no-useless-rename:
    - error

  # disallow whitespace before properties
  no-whitespace-before-property:
    - error

  # enforce the location of single-line statements
  nonblock-statement-body-position:
    - error

  # enforce consistent spacing inside braces
  object-curly-spacing:
    - error

  # enforce consistent linebreak style for operators
  operator-linebreak:
    - error
    - before

  # require or disallow padding within blocks
  padded-blocks:
    - error
    - never

  # enforce the consistent use of either backticks, double, or single quotes
  quotes:
    - error
    - single

  # enforce spacing between rest and spread operators and their expressions
  rest-spread-spacing:
    - error

  # require or disallow semicolons instead of ASI
  semi:
    - error

  # enforce spacing before and after semicolons
  semi-spacing:
    - error

  # enforce location of semicolons
  semi-style:
    - error

  # require or disallow space before blocks
  space-before-blocks:
    - error

  # require or disallow a space before function parenthesis
  space-before-function-paren:
    - error
    - anonymous: always
      named: never
      asyncArrow: always

  # disallow or enforce spaces inside of parentheses
  space-in-parens:
    - error

  # require spacing around infix operators
  space-infix-ops:
    - error

  # require or disallow spaces before/after unary operators
  space-unary-ops:
    - error

  # enforce spacing around colons of switch statements
  switch-colon-spacing:
    - error

  # enforce Usage of Spacing in Template Strings
  template-curly-spacing:
    - error

  # require or disallow spacing between template tags and their literals
  template-tag-spacing:
    - error

  # require parentheses around immediate function invocations
  wrap-iife:
    - error
    - inside

  # enforce spacing around the * in yield* expressions
  yield-star-spacing:
    - error
